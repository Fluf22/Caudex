{
  "id": "ac138244-500b-4b45-aa1a-d61de7650e3c",
  "realm": "caudex",
  "displayName": "Caudex",
  "displayNameHtml": "",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": true,
  "refreshTokenMaxReuse": 1,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "none",
  "registrationAllowed": true,
  "registrationEmailAsUsername": true,
  "rememberMe": true,
  "verifyEmail": true,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": true,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "c90a669d-e5cc-4092-ae86-5064df89a146",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "ac138244-500b-4b45-aa1a-d61de7650e3c",
        "attributes": {}
      },
      {
        "id": "543c2580-5a73-4cdc-b00a-7992efa8af37",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "ac138244-500b-4b45-aa1a-d61de7650e3c",
        "attributes": {}
      },
      {
        "id": "0677ac48-5600-4802-95d9-90ba0e1d788b",
        "name": "default-roles-caudex",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "ac138244-500b-4b45-aa1a-d61de7650e3c",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "ced14eff-9f25-489b-b7c5-6b4b87d22d19",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "54301797-c60e-4f63-9382-9e4eff871748",
          "attributes": {}
        },
        {
          "id": "04fa79a7-b76c-4c19-bdd6-a43719d4a095",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "54301797-c60e-4f63-9382-9e4eff871748",
          "attributes": {}
        },
        {
          "id": "82dacdb9-b8e3-4db6-8465-22b1ef7079c0",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "54301797-c60e-4f63-9382-9e4eff871748",
          "attributes": {}
        },
        {
          "id": "9474e68b-8e70-4129-a91e-f5b0cb9c457a",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "54301797-c60e-4f63-9382-9e4eff871748",
          "attributes": {}
        },
        {
          "id": "998f50fa-824d-4620-a1d6-a517ef7194b9",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "54301797-c60e-4f63-9382-9e4eff871748",
          "attributes": {}
        },
        {
          "id": "e6525e79-0b53-423e-b31d-03e7a57d0e69",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "54301797-c60e-4f63-9382-9e4eff871748",
          "attributes": {}
        },
        {
          "id": "c97ddfa6-53eb-4f36-ae14-044bd83d4dc7",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "54301797-c60e-4f63-9382-9e4eff871748",
          "attributes": {}
        },
        {
          "id": "b779283d-fd5b-44b9-b8f8-ef9d4a7ab556",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "54301797-c60e-4f63-9382-9e4eff871748",
          "attributes": {}
        },
        {
          "id": "f0a4b082-74eb-459d-85f8-89b7aa2838df",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-realms",
                "view-events",
                "manage-clients",
                "view-clients",
                "view-authorization",
                "manage-events",
                "create-client",
                "manage-identity-providers",
                "impersonation",
                "view-identity-providers",
                "view-users",
                "manage-authorization",
                "manage-users",
                "query-clients",
                "query-users",
                "view-realm",
                "manage-realm",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "54301797-c60e-4f63-9382-9e4eff871748",
          "attributes": {}
        },
        {
          "id": "97535e96-8b79-4c11-be3b-886222396ca2",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "54301797-c60e-4f63-9382-9e4eff871748",
          "attributes": {}
        },
        {
          "id": "d056debe-6d4a-47fb-a44b-4ce84e3a2dee",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "54301797-c60e-4f63-9382-9e4eff871748",
          "attributes": {}
        },
        {
          "id": "c95df6ae-52c2-49b3-a09a-dc09eca99bbc",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "54301797-c60e-4f63-9382-9e4eff871748",
          "attributes": {}
        },
        {
          "id": "3dbf10b0-96e2-4eb0-9b79-6b383af4f0c2",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "54301797-c60e-4f63-9382-9e4eff871748",
          "attributes": {}
        },
        {
          "id": "5f452dc6-8aab-48af-a8ca-47fb0cc31f84",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "54301797-c60e-4f63-9382-9e4eff871748",
          "attributes": {}
        },
        {
          "id": "cf4b4710-f608-427b-8043-2b3a7b695808",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "54301797-c60e-4f63-9382-9e4eff871748",
          "attributes": {}
        },
        {
          "id": "3e1086e2-1b35-49f9-8dd4-186d103db2f8",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "54301797-c60e-4f63-9382-9e4eff871748",
          "attributes": {}
        },
        {
          "id": "9a81d7d4-2cb9-4f40-827c-19d93b7da992",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "54301797-c60e-4f63-9382-9e4eff871748",
          "attributes": {}
        },
        {
          "id": "5c23a7cc-494b-4734-8c00-b35cbb91ba08",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "54301797-c60e-4f63-9382-9e4eff871748",
          "attributes": {}
        },
        {
          "id": "b4f96931-2e52-4b43-ad0b-e12e5f7087a6",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "54301797-c60e-4f63-9382-9e4eff871748",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "afa207e8-10a3-4148-9982-eb259091d10b",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "808ef4de-7fa6-4029-b147-f212a4682745",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "6ebb5b3b-2cbd-4708-aafa-93bc9642b457",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "ba5b8819-ee82-4102-b57c-e58ee484c009",
          "attributes": {}
        },
        {
          "id": "63064b2a-4ed7-4263-b548-f917df5ef29c",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "ba5b8819-ee82-4102-b57c-e58ee484c009",
          "attributes": {}
        },
        {
          "id": "a08ad325-3efd-4337-910e-7f3b4dbb42ad",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "ba5b8819-ee82-4102-b57c-e58ee484c009",
          "attributes": {}
        },
        {
          "id": "7f2c65c6-8b2c-4ee1-8025-e2e96c4f76bc",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "ba5b8819-ee82-4102-b57c-e58ee484c009",
          "attributes": {}
        },
        {
          "id": "bcc34cad-b507-4825-a7a7-453d73bc76be",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "ba5b8819-ee82-4102-b57c-e58ee484c009",
          "attributes": {}
        },
        {
          "id": "03cde3e8-bfb8-4d1d-94b7-afe112f5a36c",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "ba5b8819-ee82-4102-b57c-e58ee484c009",
          "attributes": {}
        },
        {
          "id": "10d444bc-b7b0-454a-ae0e-d811baa857e8",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "ba5b8819-ee82-4102-b57c-e58ee484c009",
          "attributes": {}
        },
        {
          "id": "4b4a741c-fa14-4637-b5e5-e3a5a22c5b24",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "ba5b8819-ee82-4102-b57c-e58ee484c009",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "0677ac48-5600-4802-95d9-90ba0e1d788b",
    "name": "default-roles-caudex",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "ac138244-500b-4b45-aa1a-d61de7650e3c"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "ba5b8819-ee82-4102-b57c-e58ee484c009",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/caudex/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/caudex/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "4d9f510e-0f9e-4b7c-a6fc-5a67d2ec5a73",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/caudex/account/",
      "surrogateAuthRequired": false,
      "enabled": false,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/caudex/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "f21eb248-2a16-4fbd-8dbc-f53836cf719f",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "924c89d5-3251-4ee2-944c-d5c04e991283",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "808ef4de-7fa6-4029-b147-f212a4682745",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "54301797-c60e-4f63-9382-9e4eff871748",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "a6f7c5c9-4370-4f6d-b8c5-f1cbbd7c909b",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/caudex/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/caudex/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "2d9aee61-092e-43f4-9be6-efcc82aaf0ef",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "2de78e46-d639-4fd9-9279-a8673e88363d",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "dea50ff9-83d0-413f-a0ae-0e395deaccae",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2a9568a8-87f8-459d-ac2f-de8a4447dab5",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "d379936d-8c42-4274-ac21-b83975659351",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "4de12ed6-b354-4f15-9e6f-4252fd9930d2",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "af900f65-14b6-47ae-bc2f-488aea704db1",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "89e4001f-50dc-4018-b6bb-f694e51d29de",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "5843f2e3-0eeb-4a61-a692-bdc627cc2ecd",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "c62d2d72-8af9-43c3-8e73-08e2cd17fb5c",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "141fd5d2-04ee-43e1-ab4c-774db504961c",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "6487d238-f247-48e2-bdd3-356effae5736",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "0545bb8e-0ff4-4cd4-97a0-9abb9f5639b1",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "ea98a25e-f49d-4056-87f5-d55af78d8513",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "18d5889a-51ec-44e3-aa78-2a371e3979d3",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "19766547-1893-4c62-8dff-67cb1400a1f2",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "cf2b9e16-1edf-4281-9c6e-6021396fb4c5",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "a263b943-60b1-402f-b0cc-f164544097ef",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "b6a38117-c7d7-4b57-9f78-626de8754d3d",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "0d491eff-0e6d-4597-93d7-837d6185e3b4",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "1dd30bf8-b3d0-4e5c-acab-f6dff1e53bcc",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "ca05cb18-93e0-4bbc-a1b0-648ddf055c45",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "87bbc1a5-a084-4beb-892d-301de86ae598",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "504bcd69-6f3b-437c-8159-4b901bff8c63",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "34304aea-ae0f-4f0f-81f3-8465c0021097",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3f15302a-1e6b-44f8-aff6-dfacf61aeb54",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "621e24af-333e-4fbd-9868-06fb7e5943e5",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6990ab08-4bf6-4649-8955-0c0c937b10a1",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ae123d79-6513-4633-9045-bf52121960bd",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4eef48b2-0416-4051-88a2-5e24bca573e6",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "fa3c7d44-cbdc-4ee5-8bdc-1ff201f512a7",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "490f0af6-a982-43f9-9950-62c3ea17c405",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "10c2ee41-a4a7-43fd-82d1-a631c73786b5",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1f5482d4-6bb2-4df7-ba2a-d52b9d92b6e5",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bedeac80-17cc-486d-a888-d1dd8e863d7c",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "a0b0f963-cbda-419d-ac1f-3be9e73b217a",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "2af58d35-4152-42ac-849c-c3ba1c2faa08",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "47b1a0b2-2f36-483d-9ce9-591c977e3851",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {
    "replyToDisplayName": "Caudex Support",
    "starttls": "true",
    "auth": "",
    "port": "1025",
    "host": "mailcatcher",
    "replyTo": "support@caudex.com",
    "from": "no-reply@caudex.com",
    "fromDisplayName": "Caudex No-Reply",
    "envelopeFrom": "",
    "ssl": "false"
  },
  "eventsEnabled": true,
  "eventsExpiration": 2592000,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": true,
  "adminEventsDetailsEnabled": true,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "b169f721-a896-4912-8949-df12ec20ac62",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "dcdd9bc7-97fa-4f6c-be3c-6572fe9fd92c",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "ba5d014b-6d00-4c3e-aad8-ce7b53e04d67",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "8b3fb5e7-ccf1-4512-8ddb-8f94c84a437c",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "3a8f14b3-bac1-4e13-a425-a3e865bbdcb6",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "8ff4996e-da70-4a80-a318-5c7f49111be1",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "479abd26-a9f7-4e77-aca0-9e275b348122",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      },
      {
        "id": "3f6f88bc-d8f8-42a9-a49d-e76ef0b3fd1a",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "oidc-address-mapper",
            "oidc-full-name-mapper"
          ]
        }
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "d7410714-3e42-4f41-8913-dab3e9187f1c",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "4eb5613a-d3fd-4b8d-a4a5-7df2950df997",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAtAII5LFL3WVIRIiRAl3CVPfJMzBu5Y9FrRtnMge9SLpaT8wpEoNBRHSJrnSlMvFEC3TCnWtBBffPSIHTikJ7GsB2ZdBglgpiO0PFQmBjh4ZslJS42e1ebH3Sdv4BQkoCHEQGPoJwYWgW1gUzIdFK4vJx1G9yqGSBWWby4550iWl1zyVgXDI1vU00AITKAJWJj/9ReY3s8MpQFx5yL4gUVVQiNn4cjlzyl64+cogEmLDi2MIPy2comDbfBj1qxajJJayxpE/7jUAYF8q2LmBysvvzjSKQMYIRmvofW4BOQpJBBOFxvPdF62VH5Yp/LMCGdJhNqTQNf8sguSklpF81PQIDAQABAoIBAAf6dhvyysbFlDIrbmfxMWmUMPgCm8uzcbZmOkjypF5amiGizig6ppQq6SZRF7heDrLGSlDxXciuruKLFI3ye+PX53eESJ+l1qxDSPUz8f1iBSKBw/6uwWpkGkW5ZONkBdtsXW18WRBMLYTvZpCHZv8PmWF9zhJuH/iPMlFJ5ubnMU+pLHJJlO3O/PJFeW6RyAkbjIyA8LVMF51LiFrTJPyEv4rhGZW+aEY/uP9lsuHZ3JZP4a9pguh9VcmZzxredHDjlJCUpgfbx1TtbBT7+xJW0BqxQ9EGpLIVWZVBKzOMv26LlEK1ic4N7YvPVbMZCMQr8dOcmrUdvuJijr1bnuECgYEA8TNFUDnHMnm8J/jQKY67k9eAAqOkJmWw2wmYyg5c8BmEXnB2OP63dOxaaIXmTFTfO3qCdu8Zd390AdvRM0VqO7TGU6v6l1iCmgYQEYdETZKAHAYty0yRFBTr2XiwmffFPlgt65iOZe7fwZiCn6zIqkSyIvZu/USmu5VSqZegOV0CgYEAvw2Q9J5qpCK5DupjBWVAeDWMZ1qCDFKUpp1cnkseguUA3uKBu98kSdsu4wX5aHUbZzy3lqGid9VMD22olz16vbTvfiVZlwNhnuFM6yqNdIb4BjE83CKos/U6yWm9kzk+vutzLt3bKIKuaKVOEacT9sjgdd6ZaQELrJTC7jACzWECgYA+pL9Cx87JeD567y85K93h1t1jUhbm9hBJwyNQjwxqO2ZalMDPqrABCQWuEeCvQHe93eKWeyDVHWAGv42E0Gl32kqMHqV1u0IoOJzhwIznzL3DCYPJQjiHy6s5jxPm2Sf8OjCq+LM7HCA3CqIaUGjJeA//7psC4lqfa3fNnhi57QKBgGqm/xmfabaw74/FBnwXltLESdnUa67HVtZgGDkBhEnb3w2NcpDXM2HLarQvPJi0bxTFj1MWbiTpPGmMdMXg+yj13ZAU95tWtuNDsHXDLm4zfjeuuuPEsVqsdiHD1qFeHonj1EwAa3yE3ynpxdgS5hEo+Cy0k/1LKSIxdVQUFyxhAoGBALqSKofrlPIhil6AG8R+jjAoUYS2MPxJAsH9LflAxIf9cVrVgtXIa9B3AGpTzVvNWG05U69HAymo1baP7Hw7NXyIi5LxuWZa/zx4RYaThYqq987O8ElHHu2QBCA+mVHwC3zk7zr9tc2ZQPRf2mVlag5UgyVe44qFH0op6dCSwnq+"
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICmzCCAYMCBgGEZYBgljANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZjYXVkZXgwHhcNMjIxMTExMDcwMjAyWhcNMzIxMTExMDcwMzQyWjARMQ8wDQYDVQQDDAZjYXVkZXgwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC0AgjksUvdZUhEiJECXcJU98kzMG7lj0WtG2cyB71IulpPzCkSg0FEdImudKUy8UQLdMKda0EF989IgdOKQnsawHZl0GCWCmI7Q8VCYGOHhmyUlLjZ7V5sfdJ2/gFCSgIcRAY+gnBhaBbWBTMh0Uri8nHUb3KoZIFZZvLjnnSJaXXPJWBcMjW9TTQAhMoAlYmP/1F5jezwylAXHnIviBRVVCI2fhyOXPKXrj5yiASYsOLYwg/LZyiYNt8GPWrFqMklrLGkT/uNQBgXyrYuYHKy+/ONIpAxghGa+h9bgE5CkkEE4XG890XrZUflin8swIZ0mE2pNA1/yyC5KSWkXzU9AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAKuEqhVwrA6D2IUlekRLMJ0BxgZMEtVs2t0FLuZGjYyiwuuq2BHjZj9zQbUZlf3CMyAutHj29r/SovzGVNQ4JLqZn8X1Mcd6Lb+FrfXhPOngEnA7dHnNZQ8fw1nLJ96hXDwxcj3PQ8H2/fWlfiPq9JwCglmcdmRE0lH2mOXgzF4+yv08OaJIHtb28X1X5h3QGxszZvqxFZZIy0MJ+VwdbX3xNpq1C4r6zbn5YtQW+Uz8DLr6I714RIqr8P/m9HlXS9bMi5kmPv5ve3prcdFhQu20//IMpbt4qBnOOZzpd5mTHM6E3Upfc7vjS7EXlW27bvWi1MfG8Q7CEeEzjGZBErI="
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "d9870d93-249c-4bb7-85d9-ed62a3c18dee",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "d53e3c05-737d-4f68-baf6-972226bb9e98"
          ],
          "secret": [
            "FPexW1RaTKOYbuHElszyOw"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "54e32054-2cb1-4344-9da3-b79f9d303676",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAxF67z2z7BMvDQ/4n5SpP8M587Kh0WteXRtFVFxaI6FDJ8hLrvvMBK+JqAwGc2G3edJ4qPuSAUU2yAO+XKxE323mo78pJsuyvSKxVQVZJC0rAi3ja6FgRvh8rtUYEAxPtWjWjLbzv+DXXSUmqp2CnBGBbA6w762uCgeACs1mKfwy1Dc1EZZU90qjuWGL8imFsQAjoNLTnjxwUwQBJtXsPL0AJ2C8akALGiEihg4ke88UQBTpsrfGZNoYvwA7NMnM/NyEwlNF7odklBL34u/aqbATppvDziKgOjvPCwAzIYJ4L3Q6scNm3yNW51qbVX6cG+Buf9j0EX1XoTVbI+ki/bwIDAQABAoIBABJsxcLMJG9fmQuM/NGimzaVK/aJRcWXm0ZAnPMaIQVp6HuHV/RQ2QgflI0sqQ/2Rcb7vNYC2vawoLuNah8shz5XbMj3BNw+G0zpJ+SwrmYvVjVKmoDuG9gSv6dLZv6iRNp6fubrO+Q2VQ63fpokK6JG/N3cMBEXmNALzzpkc+YWBl88DqnpQBtadvfABSzCGf07q4EMYp33yXyUd6lP6H/DZjzdDEKYuH6fZVlbRqiXVVbl4FFRKlyh6GMmi4oi8KxuySDvy4uhbEWX8oMS+IPbgOlsH2qt/ny6izfbPB19NWU7bfUZzt0KND4+Nuwyg495ykmGa4l8bz+OBlp1sK0CgYEA9v9n2+gBc2VRw1I9M32aPu25m+ha56l9HKoWLKE+UCcVwyd4qBBf2XSj0BG3cUMyr2jkJRg38ESGPEshQZ5sCVVd5ODmU6lZr3lzHl9nQVHR1tL/iJckEXx5tO6Ml6nkhJZluxP7qNav69ydeFFYUSQqfe2RHIQ0y4ZvCgtlV2sCgYEAy4bzUiK6CuOwe3tsqpd57Rc8GJGafnhiLMXhYbfP5rMhOKDvr4ZKljuQ8ngEV/RyEvjOS3LU6EhMRl7mkGLVkpgMfRGWBu6gJOHQjjrxf3rFMkbaFwPp3j+gAOHLZ++PLErhA0UiHR7wxl/LBSeBEucgX7nOOniRTMrnhxIwrQ0CgYEAtwG6RDd8i7GwiRXv/qy7kpC1C413fVoZNxnW4C6AawbqmvQt8+hd/FLt5QabcrIlZc5D7DArkjxTcW0BMQteZPP5Y9I3FhnON7O21fQ+HymuXotrhhrmQIaH7sUpKl5Y0NxWd+xwdELNieamTjWHSGeRjEhvUj+qlnn+3+RdrA0CgYBpfRjAiZ9D5Z+jYOWBxeE8Mb7EPTOGOX8pFacrrsnjGRUu9LtGjqQ6GcWW5v3ZWKmHi83g7TPM8SwXjTiTvaZUxNo0ONk53pTCiQg/r+1b1ZY/6NlA9JZSy0dzLZTv2gqrOmRF/Z8g2NiS+TORCFiuI310ICnzxGoLE1/NcnAoQQKBgQDdHV4YNfHJ2q7+LiHvjnHYsOJ40UhQabVbUpL/l1KBIxaV6iroh/7AOmVUG5TDJFdJU+E3nTgBfhLVNDPAiTAbEdUnsS+s3hK24a9CeMFowlZhDTozX/VFqpka0plbRSApVWJw/ssqFFqeMKngcnlEYgXMBEwIZpchC00ipYB09g=="
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICmzCCAYMCBgGEZYBhjjANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZjYXVkZXgwHhcNMjIxMTExMDcwMjAzWhcNMzIxMTExMDcwMzQzWjARMQ8wDQYDVQQDDAZjYXVkZXgwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDEXrvPbPsEy8ND/iflKk/wznzsqHRa15dG0VUXFojoUMnyEuu+8wEr4moDAZzYbd50nio+5IBRTbIA75crETfbeajvykmy7K9IrFVBVkkLSsCLeNroWBG+Hyu1RgQDE+1aNaMtvO/4NddJSaqnYKcEYFsDrDvra4KB4AKzWYp/DLUNzURllT3SqO5YYvyKYWxACOg0tOePHBTBAEm1ew8vQAnYLxqQAsaISKGDiR7zxRAFOmyt8Zk2hi/ADs0ycz83ITCU0Xuh2SUEvfi79qpsBOmm8POIqA6O88LADMhgngvdDqxw2bfI1bnWptVfpwb4G5/2PQRfVehNVsj6SL9vAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAE1ZGyaS51QoaqjYTq91IkUDc1IcSHe796m9aVSpIuTE/YBykn3F1Ml2BcwpW84hKLSW90tyvoccL6AF4IOOTcgnbzKOBUE5jnknInhG4DRrwpdStvQobLcY11Xndm7OVAYwsTfhLbuSDT8S4lbDXW56acxp1c/r0HiI0n0CYcWedPaYG2bl0ZFnldAWwn7tA1akoxzlSy+XG1CSrV+MmHHBpDveV7Wno0WB44d1EsbaDPdnGHlSE6/gQ8N33Kdxbn4WmZW0B2cFFFn6aFeQSMmCCgWlB0ypXE74BM8fxqz98/MHI04nMhyrG5EuelxF85j4cTIhLchrBHOJV0T0lAg="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "dabfddc0-83be-4737-a400-05eb0db668a4",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "0633e5f4-da73-4145-9e70-b2fbf30e3bfe"
          ],
          "secret": [
            "TzaHSw31aZOFQIjU7jZldv3KpRM3ovh9A0fOaB_Bx23S0ENjEQB4ANGuuf-7DW1Mo5sKQ3LkWCmeRfU_1-cI8Q"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": true,
  "supportedLocales": [
    "en",
    "fr"
  ],
  "defaultLocale": "en",
  "authenticationFlows": [
    {
      "id": "ca1e29a7-016e-4564-b9c5-3b13b34b6c33",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1d5df2e4-ca90-473b-af21-a56eaf8061e0",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f2b9ba6e-d2be-4802-a618-27845c8e42a8",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ab141ffb-418f-4819-9a4c-a00901b52104",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cd75790a-d0fc-4b21-b7df-1f2d47910b61",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f23a0908-f3ba-4523-ad59-fa0791fddb97",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cb89749f-898b-4dc4-989b-490be7d7e149",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5b469c87-7ebd-4a41-84e4-74e788adc304",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d163f2ca-044d-4c12-b12e-190a76878b00",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c13f3bcc-7802-41f0-890a-603b8e7ce662",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e446d005-52c3-4d1a-a52a-cb8674a98fa9",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6ebc3ac6-4f2f-4a8e-a0fb-7903d2f7f000",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "eebb045e-18fd-4dcb-b919-1151e6e1a5bc",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9051fe4d-7b36-4267-801e-a7e3393224a7",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cffe774a-f017-442d-be55-924af0176afe",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c4c5b8f8-115b-4c62-8d95-9f763a737035",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2d622af0-fdb2-4b0b-ba72-bbbafb82312c",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c22c542b-46db-4901-8e9a-f3058f2fa5b0",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6bebc3b6-43e7-4241-ac58-36cb69dbbe67",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "53c66843-fad0-44be-9843-2c919f06a501",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "02c4ef98-8fbf-4ac4-8a74-413c4713ae11",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "8a3d1637-dab7-4b24-9421-adfc73c0921f",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DevicePollingInterval": "5",
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "actionTokenGeneratedByUserLifespan-execute-actions": "",
    "actionTokenGeneratedByUserLifespan-verify-email": "",
    "clientOfflineSessionIdleTimeout": "0",
    "actionTokenGeneratedByUserLifespan-reset-credentials": "",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "600",
    "actionTokenGeneratedByUserLifespan-idp-verify-account-via-email": "",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "frontendUrl": "",
    "acr.loa.map": "{}",
    "adminEventsExpiration": "2592000"
  },
  "keycloakVersion": "20.0.0",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}