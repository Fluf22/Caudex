datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["extendedWhereUnique"]
}

generator dbml {
  provider = "prisma-dbml-generator"
}

enum Role {
  ADMIN
  USER
}

model List {
  id        String  @id @default(uuid())
  userId    String  @unique
  firstName String?
  lastName  String?

  wishes           Wish[]    @relation("RecipientList_Wish")
  ideasForOthers   Wish[]    @relation("AddedBy_Wish")
  receivedMessages Message[] @relation("OnList_Message")
  sentMessages     Message[] @relation("FromAuthor_Message")
  gifts            Gifter[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Wish {
  id          String  @id @default(uuid())
  recipientId String
  title       String
  description String?
  image       String?
  link        String?
  price       Int?
  addedBy     String
  order       Int

  giftedBy Gifter[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  recipientList List @relation(name: "RecipientList_Wish", fields: [recipientId], references: [userId])
  addedByList   List @relation(name: "AddedBy_Wish", fields: [addedBy], references: [userId])
}

model Gifter {
  id       String @id @default(uuid())
  wishId   String
  gifterId String
  amount   Int

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  wish       Wish @relation(fields: [wishId], references: [id])
  gifterList List @relation(fields: [gifterId], references: [userId])

  @@unique([wishId, gifterId])
}

model Message {
  id          String @id @default(uuid())
  recipientId String
  authorId    String
  content     String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  recipientList List @relation(name: "OnList_Message", fields: [recipientId], references: [userId])
  authorList    List @relation(name: "FromAuthor_Message", fields: [authorId], references: [userId])
}
